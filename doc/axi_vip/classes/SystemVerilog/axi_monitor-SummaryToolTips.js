NDSummary.OnToolTipsLoaded("SystemVerilogClass:axi_monitor",{863:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"TTSummary\">When active the AXI Monitor will record transactions that are presented on the virtual interface.It does below functions: Monitors all 5 AXI channels: AW, AR, R, W, and B.&nbsp; Collects and re-orders R Channel beats and returns a completed transaction when the RLAST is accepted Collects and re-orders B Channel response and returns a completed transaction when the B channel is accepted Transaction based protocol checking</div></div>",865:"<div class=\"NDToolTip TInformation LSystemVerilog\"><div class=\"TTSummary\">xil_analysis_port #(axi_monitor_transaction)&nbsp; item_collected_port; provides methods for axi monitor transaction.</div></div>",867:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype867\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">name</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new monitor object,initalize the original settings and pass the input name as the montior instance name.</div></div>",636:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype636\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_vif(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">axi_vif_mem_proxy `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Assigns input virtual interface vif to the virtual interface of the monitor.</div></div>",869:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype869\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_axi_version_t get_axi_version();</div><div class=\"TTSummary\">Returns the value of AXI version of the transaction of axi_monitor. please refer xil_axi_vif_axi_version_t for possible axi version.</div></div>",870:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype870\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_axi_version_name();</div><div class=\"TTSummary\">Returns the enum string name of AXI version of the transaction of axi_monitor. please refer xil_axi_vif_axi_version_t for possible axi version</div></div>",1136:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype1136\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_wr_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Sets the maximum number of WRITE transactions which axi_monitor can accept. Usually user set this depth from the agent which will automatically set it\'s driver/monitor</div></div>",872:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype872\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_wr_transaction_depth();</div><div class=\"TTSummary\">Returns the maximum number of WRITE transactions of axi_monitor.</div></div>",1137:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype1137\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> set_rd_transaction_depth(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Sets the maximum number of READ transactions which axi_monitor can accept. Usually user set this depth from the agent which will automatically set it\'s driver/monitor</div></div>",874:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype874\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_rd_transaction_depth();</div><div class=\"TTSummary\">Returns the maximum number of READ transactions of axi_monitor.</div></div>",875:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype875\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> enable_transaction_depth_checks();</div><div class=\"TTSummary\">Turn on checker for comparison of current write/read transaction depth against maximum wr_transaction_depth/rd_transaction_depth of axi_monitor.</div></div>",876:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype876\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function void</span> disable_transaction_depth_checks();</div><div class=\"TTSummary\">Turn off checker for comparison of current write/read transaction depth against maximum wr_transaction_depth/rd_transaction_depth of axi_monitor.</div></div>",877:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype877\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_transaction_depth_check_status();</div><div class=\"TTSummary\">Returns transaction_depth_checks_enabled value of axi_monitor. If user is not sure whether transaction_depth_checks_enabled is on or off, This API can be called to serve this purpose.</div></div>",878:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype878\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_rd_transactions_inflight();</div><div class=\"TTSummary\">Returns number of read transaction in flight of axi_monitor.</div></div>",879:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype879\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_num_wr_transactions_inflight();</div><div class=\"TTSummary\">Returns number of write transaction in flight of axi_monitor.</div></div>",880:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype880\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task run_phase();</div><div class=\"TTSummary\">Start all control processes for operation of axi_monitor.</div></div>",881:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype881\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task stop_phase();</div><div class=\"TTSummary\">Stops all control processes of axi_monitor.</div></div>",882:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype882\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> axi_monitor_transaction create_transaction (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_transaction&quot;</span>,</td></tr><tr><td class=\"PType first\">xil_axi_cmd_t&nbsp;</td><td class=\"PName\">dir</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Returns an AXI monitor transaction class that has been &quot;newed&quot;.</div></div>"});