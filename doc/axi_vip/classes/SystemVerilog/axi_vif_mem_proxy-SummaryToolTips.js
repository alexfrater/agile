NDSummary.OnToolTipsLoaded("SystemVerilogClass:axi_vif_mem_proxy",{631:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"TTSummary\">AXI VIF Proxy Class. It has virtual interface for AXI VIP interface.</div></div>",773:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype773\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task wait_aclks(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">cnt</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Waits specified amount of posedge of aclk</div></div>",632:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype632\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_posedge_aclk();</div><div class=\"TTSummary\">Waits posedge of ACLK of m_vif</div></div>",85:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype85\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_posedge_aclk_with_hold();</div><div class=\"TTSummary\">Waits posedge of ACLK of m_vif occurs,then wait hold_time</div></div>",776:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype776\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_negedge_aclk();</div><div class=\"TTSummary\">Waits negedge of ACLK of m_vif</div></div>",777:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype777\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_areset_deassert();</div><div class=\"TTSummary\">Waits areset to be deasserted</div></div>",203:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype203\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t is_aclk_high();</div><div class=\"TTSummary\">Returns TRUE if the aclk is in the HIGH phase of the cycle.</div></div>",212:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype212\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t is_aclk_low();</div><div class=\"TTSummary\">Returns TRUE if the aclk is in the LOW phase of the cycle.</div></div>",213:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype213\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_boolean_t get_drive_x();</div><div class=\"TTSummary\">Returns TRUE if dummy_drive_type is XIL_AXI_VIF_DRIVE_X, else returns FALSE</div></div>",252:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype252\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_dummy_drive_t get_dummy_drive_type(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_cmd_t&nbsp;</td><td class=\"PName last\">d</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Returns dummy_drive_type of m_vif. Refer xil_axi_vif_dummy_drive_t for dummy type.</div></div>",782:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype782\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task put_rdata(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">beat_num</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Puts specified beat into READ data Channel of axi_vif_mem_proxy.</div></div>",783:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype783\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual</span> task put_wdata(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer,</td></tr><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_uint&nbsp;</td><td class=\"PName last\">beat_num</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Puts specified beat into Write Data Channel of axi_vif_mem_proxy.</div></div>",784:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype784\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name&nbsp;</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_vif_mem_proxy&quot;</span></td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Constructor to create a new axi vif proxy and set protocol version, ~name~ is the instance name.</div></div>",316:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype316\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_vif_axi_version_t get_axi_version();</div><div class=\"TTSummary\">Returns axi_version of &lt;axi_vif_mem_proxy&gt;.refer xil_axi_vif_axi_version_t for axi_version information.</div></div>",317:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype317\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_axi_version(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_vif_axi_version_t&nbsp;</td><td class=\"PName last\">update</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Sets axi_version of axi_vif_mem_proxy. refer xil_axi_vif_axi_version_t for axi_version information.</div></div>",322:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype322\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function string</span> get_axi_version_name();</div><div class=\"TTSummary\">Returns axi_version\'s name. refer xil_axi_vif_axi_version_t for axi_version information.</div></div>",328:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype328\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_drive_x();</div><div class=\"TTSummary\">Sets dummy_drive_type to be XIL_AXI_VIF_DRIVE_X of axi_vif_mem_proxy. Refer xil_axi_vif_dummy_drive_t for dummy drive type.</div></div>",330:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype330\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_dummy_drive_type(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">input&nbsp;</td><td class=\"PType\">xil_axi_vif_dummy_drive_t&nbsp;</td><td class=\"PName last\">inp</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Sets dummy_drive_type of axi_vif_mem_proxy. Refer xil_axi_vif_dummy_drive_t for dummy drive type.</div></div>",790:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype790\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function void</span> assign_vi (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName last\">vif</td></tr></table></td><td class=\"PAfterParameters\">) ;</td></tr></table></div><div class=\"TTSummary\">Assigns m_vif of axi_vif_mem_proxy.</div></div>",791:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype791\" class=\"NDPrototype NoParameterForm\">task run_phase();</div><div class=\"TTSummary\">Start control processes for operation of axi_vif_mem_proxy.</div></div>",334:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype334\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> xil_axi_uint get_current_clk_count();</div><div class=\"TTSummary\">Returns clk_edge_counter of axi_vif_mem_proxy. Increment the clock edge counter on clock negedges, to avoid race conditions with synchronous tasks, that could otherwise execute either before or after thie clock edge counter is incremented.</div></div>",340:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype340\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">function</span> time get_current_edge_time();</div><div class=\"TTSummary\">Returns clk_edge_time of axi_vif_mem_proxy. clk_edge_time is the time of posedge aclk.</div></div>",794:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype794\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_aw_noise();</div><div class=\"TTSummary\">Puts noise on Write command channel of axi_vif_mem_proxy.</div></div>",795:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype795\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_ar_noise();</div><div class=\"TTSummary\">Puts noise on read command channel of axi_vif_mem_proxy.</div></div>",796:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype796\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_w_noise();</div><div class=\"TTSummary\">Puts noise on write data channel of axi_vif_mem_proxy.</div></div>",797:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype797\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_r_noise();</div><div class=\"TTSummary\">Puts noise on Read data channel of axi_vif_mem_proxy.</div></div>",798:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype798\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> put_b_noise();</div><div class=\"TTSummary\">Puts noise on Bresp channel of axi_vif_mem_proxy.</div></div>",342:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype342\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_aw();</div><div class=\"TTSummary\">Reset AW channel of &lt;axi_vif_mem_proxy&gt;.clear awvalid and put noise into write command channel.</div></div>",348:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype348\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_ar();</div><div class=\"TTSummary\">Resets AR channel of axi_vif_mem_proxy. clear arvalid and put noise into read command channel.</div></div>",992:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype992\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_w();</div><div class=\"TTSummary\">Resets W channel of axi_vif_mem_proxy. clear wvalid and put noise into write data channel.</div></div>",993:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype993\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_r();</div><div class=\"TTSummary\">Resets R channel of axi_vif_mem_proxy. clear rvalid and put noise into read response channel.</div></div>",999:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype999\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> reset_b();</div><div class=\"TTSummary\">Resets B channel of axi_vif_mem_proxy. clear bvalid and put noise into write response channel.</div></div>",804:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype804\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> put_cmd(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">inout</span>&nbsp;</td><td class=\"PType\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Puts write/read commands on Write/Read commands Channel of axi_vif_mem_proxy.</div></div>",805:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype805\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> put_bresp(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\">axi_transaction&nbsp;</td><td class=\"PName last\">transfer</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Puts transaction information onto BRESP channel of axi_vif_mem_proxy.</div></div>",806:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype806\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_beat get_awcmd();</div><div class=\"TTSummary\">Collects write command channel info from IF and returns it to write command beat of axi_vif_mem_proxy.</div></div>",807:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype807\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_cmd_beat get_arcmd();</div><div class=\"TTSummary\">Collects read command channel info from IF and returns it to read command beat of axi_vif_mem_proxy.</div></div>",808:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype808\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_resp_beat get_bresp();</div><div class=\"TTSummary\">Collects bresp channel info from IF and returns it to bresp beat of axi_vif_mem_proxy.</div></div>",809:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype809\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_read_beat get_rdata();</div><div class=\"TTSummary\">Collects read data channel info from IF and returns it to read data beat of axi_vif_mem_proxy.</div></div>",810:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype810\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> xil_axi_write_beat get_wdata();</div><div class=\"TTSummary\">Collects write data channel info from IF and returns it to write data beat.</div></div>",811:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype811\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_awvalid();</div><div class=\"TTSummary\">Sets awvalid of m_vif to be 1</div></div>",812:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype812\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_arvalid();</div><div class=\"TTSummary\">Sets arvalid of m_vif to be 1</div></div>",813:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype813\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_awvalid();</div><div class=\"TTSummary\">Sets awvalid of m_vif to be 0</div></div>",814:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype814\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_arvalid();</div><div class=\"TTSummary\">Sets arvalid of m_vif to be 0</div></div>",815:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype815\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_bvalid();</div><div class=\"TTSummary\">Sets bvalid of m_vif to be 1</div></div>",816:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype816\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_bvalid();</div><div class=\"TTSummary\">Sets bvalid of m_vif to be 0</div></div>",817:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype817\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_rvalid();</div><div class=\"TTSummary\">Sets rvalid of m_vif to be 1</div></div>",818:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype818\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_rvalid();</div><div class=\"TTSummary\">Sets rvalid of m_vif to be 0</div></div>",819:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype819\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_wvalid();</div><div class=\"TTSummary\">Sets wvalid of m_vif to be 1</div></div>",820:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype820\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_wvalid();</div><div class=\"TTSummary\">Sets wvalid of m_vif to be 0</div></div>",821:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype821\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_awready();</div><div class=\"TTSummary\">Sets awready of m_vif to be 1</div></div>",822:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype822\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_arready();</div><div class=\"TTSummary\">Sets arready of m_vif to be 1</div></div>",823:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype823\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_awready();</div><div class=\"TTSummary\">Sets awready of m_vif to be 0</div></div>",824:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype824\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_arready();</div><div class=\"TTSummary\">Sets arready of m_vif to be 0</div></div>",825:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype825\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_bready();</div><div class=\"TTSummary\">Sets bready of m_vif to be 1</div></div>",826:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype826\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_bready();</div><div class=\"TTSummary\">Sets bready of m_vif to be 0</div></div>",827:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype827\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_rready();</div><div class=\"TTSummary\">Sets rready of m_vif to be 1</div></div>",828:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype828\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_rready();</div><div class=\"TTSummary\">Sets rready of m_vif to be 0</div></div>",829:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype829\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> set_wready();</div><div class=\"TTSummary\">Sets wready of m_vif to be 1</div></div>",830:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype830\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function void</span> clr_wready();</div><div class=\"TTSummary\">Sets wready of m_vif to be 0</div></div>",831:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype831\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_awready_asserted();</div><div class=\"TTSummary\">Returns 1 if AWREADY of clock block in m_vif is 1, else returns 0</div></div>",832:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype832\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_arready_asserted();</div><div class=\"TTSummary\">Returns 1 if ARREADY of clock block in m_vif is 1, else returns 0</div></div>",833:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype833\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_wready_asserted();</div><div class=\"TTSummary\">Returns 1 if WREADY of clock block in m_vif is 1, else returns 0</div></div>",834:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype834\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_rready_asserted();</div><div class=\"TTSummary\">Returns 1 if RREADY of clock block in m_vif is 1, else returns 0</div></div>",835:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype835\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_bready_asserted();</div><div class=\"TTSummary\">Returns 1 if BREADY of clock block in m_vif is 1, else returns 0</div></div>",836:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype836\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_awvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if AWVALID of clock block in m_vif is 1, else returns 0</div></div>",837:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype837\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_arvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if ARVALID of clock block in m_vif is 1, else returns 0</div></div>",838:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype838\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_wvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if WVALID of clock block in m_vif is 1, else returns 0</div></div>",839:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype839\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_rvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if RVALID of clock block in m_vif is 1, else returns 0</div></div>",840:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype840\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_bvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if BVALID of clock block in m_vif is 1, else returns 0</div></div>",841:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype841\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_awvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if AWVALID of m_vif is 1, else returns 0</div></div>",842:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype842\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_arvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if ARVALID of m_vif is 1, else returns 0</div></div>",843:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype843\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_wvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if WVALID of m_vif is 1, else returns 0</div></div>",844:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype844\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_rvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if RVALID of m_vif is 1, else returns 0</div></div>",845:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype845\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_live_bvalid_asserted();</div><div class=\"TTSummary\">Returns 1 if BVALID of m_vif is 1, else returns 0</div></div>",846:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype846\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_awvalid_asserted();</div><div class=\"TTSummary\">Wait AWVALID of m_vif is 1</div></div>",847:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype847\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_arvalid_asserted();</div><div class=\"TTSummary\">Wait ARVALID of m_vif is 1</div></div>",848:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div class=\"TTSummary\">Wait WALID of m_vif is 1</div></div>",849:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype849\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_rvalid_asserted();</div><div class=\"TTSummary\">Wait RVALID of m_vif is 1</div></div>",850:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype850\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_live_bvalid_asserted();</div><div class=\"TTSummary\">Wait BVALID of m_vif is 1</div></div>",851:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype851\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_areset_asserted();</div><div class=\"TTSummary\">Waits areset to be asserted</div></div>",852:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype852\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_wvalid_sampled();</div><div class=\"TTSummary\">Wait till WVALID is sampled</div></div>",853:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype853\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_aw_accepted();</div><div class=\"TTSummary\">Waits till AWREADY/AWVALID handshake occurs</div></div>",854:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype854\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_ar_accepted();</div><div class=\"TTSummary\">Waits till ARREADY/ARVALID handshake occurs</div></div>",855:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype855\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_r_accepted();</div><div class=\"TTSummary\">Waits till RREADY/RVALID handshake occurs</div></div>",856:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype856\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_w_accepted();</div><div class=\"TTSummary\">Waits till WREADY/WVALID handshake occurs</div></div>",857:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype857\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task wait_b_accepted();</div><div class=\"TTSummary\">Waits till BREADY/BVALID handshake occurs</div></div>",858:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype858\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_aw_accepted();</div><div class=\"TTSummary\">Returns 1 if AWREADY/AWVALID handshake occurs</div></div>",859:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype859\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_ar_accepted();</div><div class=\"TTSummary\">Returns 1 if ARREADY/ARVALID handshake occurs</div></div>",860:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype860\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_r_accepted();</div><div class=\"TTSummary\">Returns 1 if RREADY/RVALID handshake occurs</div></div>",861:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype861\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_w_accepted();</div><div class=\"TTSummary\">Returns 1 if WREADY/WVALID handshake occurs</div></div>",862:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype862\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual function</span> bit is_b_accepted();</div><div class=\"TTSummary\">Returns 1 if BREADY/BVALID handshake occurs</div></div>"});