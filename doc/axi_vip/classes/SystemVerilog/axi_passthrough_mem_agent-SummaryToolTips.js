NDSummary.OnToolTipsLoaded("SystemVerilogClass:axi_passthrough_mem_agent",{919:"<div class=\"NDToolTip TClass LSystemVerilog\"><div class=\"TTSummary\">An extension of axi_passthrough_agent with memory model.</div></div>",1128:"<div class=\"NDToolTip TInformation LSystemVerilog\"><div class=\"TTSummary\">axi_monitor&nbsp; `AXI_PARAM_ORDER monitor;</div></div>",1130:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype1130\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">function new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"first\"></td><td class=\"PType\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName\">name</td><td class=\"PDefaultValueSeparator\">=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHString\">&quot;unnamed_axi_passthrough_mem_agent&quot;</span>,</td></tr><tr><td class=\"PModifierQualifier first\"><span class=\"SHKeyword\">virtual interface</span> axi_vip_if `</td><td class=\"PType\">AXI_PARAM_ORDER&nbsp;</td><td class=\"PName\">vif</td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Constructor to create an AXI Passsthrough Agent with memory model,~name~ is the instance name and axi_vip_if is the interface in the design.&nbsp; Please see PG267 for how to find the interface in design hierarchy.</div></div>",1169:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype1169\" class=\"NDPrototype WideForm CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">virtual function void</span> set_agent_tag(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PType first\"><span class=\"SHKeyword\">string</span>&nbsp;</td><td class=\"PName last\">updated</td></tr></table></td><td class=\"PAfterParameters\">);</td></tr></table></div><div class=\"TTSummary\">Sets the tag of the axi_passthrough_mem_agent and all sub classes. If more than one VIPs(in passthrough memory mode) being used in the same testbench, User can use set_agent_tag with different tag to tell where exactly the log message comes from.</div></div>",920:"<div class=\"NDToolTip TFunction LSystemVerilog\"><div id=\"NDPrototype920\" class=\"NDPrototype NoParameterForm\"><span class=\"SHKeyword\">virtual</span> task start_slave();</div><div class=\"TTSummary\">Enables runtime slave mode READ and WRITE drivers in this agent.Start to collect data.&nbsp; The drivers will only issue ready signals when the send functions are called.</div></div>"});